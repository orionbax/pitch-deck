# API Documentation for app.py

## Base URL
The base URL for all API requests is: `http://127.0.0.1:5000`

## Endpoints

### 1. Create Project
- **URL**: `/create_project`
- **Method**: `POST`
- **Description**: Initializes a new project session with a specified project ID.
- **Request Body**:  ```json
  {
    "project_id": "string"
  }  ```
- **Response**:
  - **Success**: Returns the initial state of the project.    ```json
    {
      "project_id": "string",
      "current_phase": 0,
      "current_language": "en",
      "slides": {},
      "html_preview": false,
      "pdf_generated": false,
      "timestamp": "ISO 8601 string"
    }    ```
  - **Error**: If `project_id` is not provided.    ```json
    {
      "error": "Project ID is required"
    }    ```

### 2. Delete Project
- **URL**: `/delete_project`
- **Method**: `POST`
- **Description**: Clears the current project session, effectively deleting the project.
- **Response**:
  - **Success**:    ```json
    {
      "status": "success",
      "message": "Project deleted"
    }    ```

### 3. Upload Documents
- **URL**: `/upload_documents`
- **Method**: `POST`
- **Description**: Uploads and processes documents (PDF, DOCX, TXT) for the current project.
- **Request**: Form data with files under the key `documents`.
- **Response**:
  - **Success**: Returns the number of documents successfully processed.    ```json
    {
      "status": "success",
      "message": "X documents processed"
    }    ```
  - **Error**: If no documents are provided or if processing fails.    ```json
    {
      "error": "No documents provided"
    }    ```

### 4. Set Language
- **URL**: `/set_language`
- **Method**: `POST`
- **Description**: Sets the language for the current project session.
- **Request Body**:  ```json
  {
    "language": "en" | "no"
  }  ```
- **Response**:
  - **Success**: Confirms the language has been set.    ```json
    {
      "status": "success",
      "message": "Language set to en"
    }    ```
  - **Error**: If an invalid language is provided.    ```json
    {
      "error": "Invalid language"
    }    ```

### 5. Generate Slides
- **URL**: `/generate_slides`
- **Method**: `POST`
- **Description**: Generates content for a specified slide type using the uploaded documents.
- **Request Body**:  ```json
  {
    "slide": "string"
  }  ```
- **Response**:
  - **Success**: Returns the generated content for the slide.    ```json
    {
      "status": "completed",
      "content": "string"
    }    ```
  - **Error**: If no documents are available or if slide generation fails.    ```json
    {
      "error": "No documents provided"
    }    ```

### 6. Edit Slide
- **URL**: `/edit_slide`
- **Method**: `POST`
- **Description**: Edits the content of a specified slide based on user input.
- **Request Body**:  ```json
  {
    "slide": "string",
    "edit_request": "string"
  }  ```
- **Response**:
  - **Success**: Returns the modified content of the slide.    ```json
    {
      "status": "completed",
      "content": "string"
    }    ```
  - **Error**: If slide modification fails.    ```json
    {
      "error": "Failed to modify slide content"
    }    ```

### 7. Test CORS
- **URL**: `/test_cors`
- **Method**: `GET`
- **Description**: A simple endpoint to test CORS configuration.
- **Response**:  ```json
  {
    "message": "CORS is working!"
  }  ```

